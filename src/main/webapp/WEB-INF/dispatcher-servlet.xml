<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:security="http://www.springframework.org/schema/security" 
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:mvc="http://www.springframework.org/schema/mvc"
 xmlns:tx="http://www.springframework.org/schema/tx"
 xmlns:webflow="http://www.springframework.org/schema/webflow-config"
 xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
 http://www.springframework.org/schema/mvc
 http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context-4.2.xsd
 http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
 http://www.springframework.org/schema/tx
  http://www.springframework.org/schema/webflow-config
        http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd">
 

<context:component-scan base-package="com.controller" />
 <context:component-scan base-package="DAOClass" />
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/view/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
    <mvc:annotation-driven/>
    
    
    <!--  Hibernate config--> 
    
         <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">  
        <property name="driverClassName"  value="org.h2.Driver"></property>  
        <property name="url" value="jdbc:h2:tcp://localhost/~/test"></property>  
        <property name="username" value="punam"></property>  
        <property name="password" value=""></property>  
    </bean>  

   
    <bean id="sessionFactory"  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
        <property name="dataSource" ref="dataSource">
               
        </property>  
          
          <property name="annotatedClasses">
			<list>
				<!--  <value>ModelClass.User</value>  Entity classes-->
				  <value>com.EntityClassess.Product</value>
				   <value>com.EntityClassess.User</value>
				   <value>com.EntityClassess.User_Authorization</value>
			</list>
			</property>
       
        <property name="hibernateProperties">  
            <props>  
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>  
                <prop key="hibernate.hbm2ddl.auto">update</prop>  
                <prop key="hibernate.show_sql">true</prop>  
                  
            </props>  
        </property>  
        
    </bean>  
    <bean class="org.springframework.orm.hibernate4.HibernateTransactionManager" id="txAdvice">  
 <property name="sessionFactory" ref="sessionFactory"></property>  
  </bean>  
     <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
 
         <!-- setting maximum upload size -->
        <property name="maxUploadSize" value="100000" />
 
    </bean>
    
   
     <!--   <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
 
</bean>-->

        <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource">
			
		</property>
	</bean>
  <!--  <bean id="dataDaoImpl" class="org.controller.UserDaoImpl"></bean>  
   <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver"></bean>
   <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver"></bean> 
   <bean id="springSecurityFilterChain" class="org.springframework.web.filter.DelegatingFilterProxy"/>-->  
    <bean id="productServiceImpl" class="com.controller.ProductServiceImpl" />   

	 <bean id="userServiceImpl" class="com.controller.UserServiceImpl" /> 
  <bean id="multiPartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>
 
    <mvc:resources mapping="/static/**" location="/static/" />
    <mvc:default-servlet-handler />
 
 
 
 
 <!-- Webflow Configuration -->
 
 
 
 
 
 
<!-- 
 
 
 <webflow:flow-executor id="flowExecutor" />
 
	<webflow:flow-registry id="flowRegistry"
	
		flow-builder-services="flowBuilderServices" base-path="/WEB-INF">
		here the id is mapped to invoke this flow
		<webflow:flow-location id="orderShip" path="/orderShipFlow.xml" />
	</webflow:flow-registry>
 
	<webflow:flow-builder-services id="flowBuilderServices"
		view-factory-creator="viewFactoryCreator" />
 
 
 <bean class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
		<property name="flowExecutor" ref="flowExecutor" />
	</bean>
 
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
		<property name="flowRegistry" ref="flowRegistry" />
		<property name="order" value="0" />
	</bean>
	
		<bean id="viewFactoryCreator"
		class="org.springframework.webflow.mvc.builder.MvcViewFactoryCreator">
		<property name="viewResolvers">
			<list>
				<ref bean="viewResolver" />
			</list>
		</property>
	</bean> -->
  
 
 
 
 
 
</beans>